{"version":3,"file":"index.js","mappings":"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","sources":["webpack://react-system-hook/webpack/bootstrap","webpack://react-system-hook/./www/library/src/system-hook-type.ts","webpack://react-system-hook/webpack/runtime/define property getters","webpack://react-system-hook/webpack/runtime/hasOwnProperty shorthand","webpack://react-system-hook/webpack/runtime/make namespace object","webpack://react-system-hook/external commonjs \"react\"","webpack://react-system-hook/./www/library/src/util/function.ts","webpack://react-system-hook/./www/library/src/system-hook-const.ts","webpack://react-system-hook/./www/library/src/system-hook-helper.ts","webpack://react-system-hook/./www/library/src/system-hook.ts","webpack://react-system-hook/./www/library/src/screen-size-hook.ts","webpack://react-system-hook/./www/library/src/screen-width-hook.ts","webpack://react-system-hook/./www/library/src/screen-height-hook.ts","webpack://react-system-hook/./www/library/src/util/system.ts","webpack://react-system-hook/./www/library/src/document-visibility-hook.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export enum ScreenWidthNameEnum {\n    desktop = \"desktop\",\n    mobile = \"mobile\",\n    tablet = \"tablet\",\n}\n\nexport type RectangleSizeType = Readonly<{\n    height: number;\n    width: number;\n}>;\n\nexport type SystemScreenDataType = Readonly<{\n    devicePixelRatio: number;\n    isDesktop: boolean;\n    isLandscape: boolean;\n    isMobile: boolean;\n    isPortrait: boolean;\n    isTablet: boolean;\n    name: ScreenWidthNameEnum;\n}>;\n\nexport type SystemHookType = Readonly<{\n    isBrowser: boolean;\n    screenInfo: SystemScreenDataType;\n}>;\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","/* global NodeJS, setTimeout, clearTimeout */\n\nexport function debounce<ArgsType extends Array<unknown>>(\n    wrappedFunction: (...args: ArgsType) => unknown,\n    waitInMs: number\n): (...args: ArgsType) => void {\n    let timeout: NodeJS.Timeout | null = null;\n\n    return function debouncedFunction(...args: ArgsType): void {\n        if (timeout !== null) {\n            clearTimeout(timeout);\n        }\n\n        timeout = setTimeout(() => {\n            wrappedFunction(...args);\n        }, waitInMs);\n    };\n}\n","import {type RectangleSizeType, ScreenWidthNameEnum} from \"./system-hook-type\";\n\nexport const screenMinWidth: Record<ScreenWidthNameEnum, number> = {\n    [ScreenWidthNameEnum.desktop]: 1024,\n    [ScreenWidthNameEnum.mobile]: 320,\n    [ScreenWidthNameEnum.tablet]: 768,\n};\n\nexport const defaultScreenSize: RectangleSizeType = {\n    height: screenMinWidth.tablet,\n    width: screenMinWidth.desktop,\n};\n","/* eslint-disable capitalized-comments */\n\n/* global window, document */\n\nimport {type RectangleSizeType, ScreenWidthNameEnum, type SystemScreenDataType} from \"./system-hook-type\";\nimport {defaultScreenSize, screenMinWidth} from \"./system-hook-const\";\n\nexport function getScreenName(screenWidth: number): ScreenWidthNameEnum {\n    if (screenWidth >= screenMinWidth[ScreenWidthNameEnum.desktop]) {\n        return ScreenWidthNameEnum.desktop;\n    }\n\n    if (screenWidth >= screenMinWidth[ScreenWidthNameEnum.tablet]) {\n        return ScreenWidthNameEnum.tablet;\n    }\n\n    return ScreenWidthNameEnum.mobile;\n}\n\nexport function getScreenSize(): RectangleSizeType {\n    if (typeof document === \"undefined\") {\n        return defaultScreenSize;\n    }\n\n    const {documentElement} = document;\n\n    const {clientWidth: width, clientHeight: height} = documentElement;\n\n    return {height, width};\n}\n\nexport function getDevicePixelRatio(): number {\n    const defaultDevicePixelRatio = 2;\n\n    if (typeof window === \"undefined\") {\n        return defaultDevicePixelRatio;\n    }\n\n    const {devicePixelRatio} = window;\n\n    if (devicePixelRatio <= defaultDevicePixelRatio) {\n        return defaultDevicePixelRatio;\n    }\n\n    return devicePixelRatio;\n}\n\nexport function getScreenState(width: number, height: number): SystemScreenDataType {\n    const isLandscape = width > height; // use >, do not use >=, if width === height it is portrait\n    const screenName = getScreenName(width);\n\n    return {\n        devicePixelRatio: getDevicePixelRatio(),\n        isDesktop: screenName === ScreenWidthNameEnum.desktop,\n        isLandscape,\n        isMobile: screenName === ScreenWidthNameEnum.mobile,\n        isPortrait: !isLandscape,\n        isTablet: screenName === ScreenWidthNameEnum.tablet,\n        name: screenName,\n    };\n}\n\n/*\nexport function getIsIOS(): boolean {\n    if (typeof navigator === 'undefined') {\n        return false;\n    }\n\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\nexport function getIsAndroid(): boolean {\n    if (typeof navigator === 'undefined') {\n        return false;\n    }\n\n    return /(android)/i.test(navigator.userAgent);\n}\n*/\n","/* global window */\n\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\n\nimport {debounce} from \"./util/function\";\n\nimport type {ScreenWidthNameEnum, SystemHookType, SystemScreenDataType} from \"./system-hook-type\";\nimport {getScreenSize, getScreenState} from \"./system-hook-helper\";\n\nexport function useSystem(): SystemHookType {\n    const isBrowser = typeof window !== \"undefined\";\n\n    const {width: defaultWidth, height: defaultHeight} = getScreenSize();\n\n    const {\n        devicePixelRatio: defaultDevicePixelRatio,\n        isDesktop: defaultIsDesktop,\n        isLandscape: defaultIsLandscape,\n        isMobile: defaultIsMobile,\n        isPortrait: defaultIsPortrait,\n        isTablet: defaultIsTablet,\n        name: defaultName,\n    } = getScreenState(defaultWidth, defaultHeight);\n\n    const [devicePixelRatio, setDevicePixelRatio] = useState<number>(defaultDevicePixelRatio);\n    const [isDesktop, setIsDesktop] = useState<boolean>(defaultIsDesktop);\n    const [isLandscape, setIsLandscape] = useState<boolean>(defaultIsLandscape);\n    const [isMobile, setIsMobile] = useState<boolean>(defaultIsMobile);\n    const [isPortrait, setIsPortrait] = useState<boolean>(defaultIsPortrait);\n    const [isTablet, setIsTablet] = useState<boolean>(defaultIsTablet);\n    const [name, setName] = useState<ScreenWidthNameEnum>(defaultName);\n\n    const handleResize = useCallback(() => {\n        const {width: updatedWidth, height: updatedHeight} = getScreenSize();\n\n        const {\n            devicePixelRatio: updatedDevicePixelRatio,\n            isDesktop: updatedIsDesktop,\n            isLandscape: updatedIsLandscape,\n            isMobile: updatedIsMobile,\n            isPortrait: updatedIsPortrait,\n            isTablet: updatedIsTablet,\n            name: updatedName,\n        } = getScreenState(updatedWidth, updatedHeight);\n\n        setDevicePixelRatio(updatedDevicePixelRatio);\n        setIsDesktop(updatedIsDesktop);\n        setIsLandscape(updatedIsLandscape);\n        setIsMobile(updatedIsMobile);\n        setIsPortrait(updatedIsPortrait);\n        setIsTablet(updatedIsTablet);\n        setName(updatedName);\n    }, []);\n\n    useEffect(() => {\n        const handleResizeDebounced = debounce<[]>(handleResize, 150);\n\n        window.addEventListener(\"resize\", handleResizeDebounced, {capture: false, passive: true});\n\n        return (): undefined => {\n            window.removeEventListener(\"resize\", handleResizeDebounced, {capture: false});\n        };\n    }, [handleResize]);\n\n    const screenInfo: SystemScreenDataType = useMemo((): SystemScreenDataType => {\n        return {\n            devicePixelRatio,\n            isDesktop,\n            isLandscape,\n            isMobile,\n            isPortrait,\n            isTablet,\n            name,\n        };\n    }, [devicePixelRatio, isDesktop, isLandscape, isMobile, isPortrait, isTablet, name]);\n\n    return useMemo((): SystemHookType => {\n        return {isBrowser, screenInfo};\n    }, [isBrowser, screenInfo]);\n}\n","/* global window */\n\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\n\nimport {debounce} from \"./util/function\";\nimport type {RectangleSizeType} from \"./system-hook-type\";\nimport {getScreenSize} from \"./system-hook-helper\";\n\nexport function useScreenSize(): RectangleSizeType {\n    const {width: defaultWidth, height: defaultHeight} = getScreenSize();\n\n    const [width, setWidth] = useState<number>(defaultWidth);\n    const [height, setHeight] = useState<number>(defaultHeight);\n\n    const handleResize = useCallback(() => {\n        const {width: updatedWidth, height: updatedHeight} = getScreenSize();\n\n        setWidth(updatedWidth);\n        setHeight(updatedHeight);\n    }, []);\n\n    useEffect(() => {\n        const handleResizeDebounced = debounce<[]>(handleResize, 150);\n\n        window.addEventListener(\"resize\", handleResizeDebounced, {capture: false, passive: true});\n\n        return (): undefined => {\n            window.removeEventListener(\"resize\", handleResizeDebounced, {capture: false});\n        };\n    }, [handleResize]);\n\n    return useMemo((): RectangleSizeType => {\n        return {height, width};\n    }, [height, width]);\n}\n","/* global window */\n\nimport {useCallback, useEffect, useState} from \"react\";\n\nimport {debounce} from \"./util/function\";\nimport {getScreenSize} from \"./system-hook-helper\";\n\nexport function useScreenWidth(): number {\n    const {width: defaultWidth} = getScreenSize();\n\n    const [width, setWidth] = useState<number>(defaultWidth);\n\n    const handleResize = useCallback(() => {\n        const {width: updatedWidth} = getScreenSize();\n\n        setWidth(updatedWidth);\n    }, []);\n\n    useEffect(() => {\n        const handleResizeDebounced = debounce<[]>(handleResize, 150);\n\n        window.addEventListener(\"resize\", handleResizeDebounced, {capture: false, passive: true});\n\n        return (): undefined => {\n            window.removeEventListener(\"resize\", handleResizeDebounced, {capture: false});\n        };\n    }, [handleResize]);\n\n    return width;\n}\n","/* global window */\n\nimport {useCallback, useEffect, useState} from \"react\";\n\nimport {debounce} from \"./util/function\";\nimport {getScreenSize} from \"./system-hook-helper\";\n\nexport function useScreenHeight(): number {\n    const {height: defaultHeight} = getScreenSize();\n\n    const [height, setHeight] = useState<number>(defaultHeight);\n\n    const handleResize = useCallback(() => {\n        const {height: updatedHeight} = getScreenSize();\n\n        setHeight(updatedHeight);\n    }, []);\n\n    useEffect(() => {\n        const handleResizeDebounced = debounce<[]>(handleResize, 150);\n\n        window.addEventListener(\"resize\", handleResizeDebounced, {capture: false, passive: true});\n\n        return (): undefined => {\n            window.removeEventListener(\"resize\", handleResizeDebounced, {capture: false});\n        };\n    }, [handleResize]);\n\n    return height;\n}\n","/* global document */\n\nexport function getDocumentIsVisible(): boolean {\n    if (typeof document === \"undefined\") {\n        return false;\n    }\n\n    return document.visibilityState === \"visible\";\n}\n","/* global document */\n\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\n\nimport {debounce} from \"./util/function\";\nimport {getDocumentIsVisible} from \"./util/system\";\n\nexport function useDocumentVisibility(): boolean {\n    const [isVisible, setIsVisible] = useState<boolean>(getDocumentIsVisible());\n\n    const handleVisibilityChange = useCallback(() => {\n        setIsVisible(getDocumentIsVisible());\n    }, []);\n\n    useEffect(() => {\n        const handleVisibilityChangeDebounced = debounce<[]>(handleVisibilityChange, 150);\n\n        document.addEventListener(\"visibilitychange\", handleVisibilityChangeDebounced, {capture: false, passive: true});\n\n        return (): undefined => {\n            document.removeEventListener(\"visibilitychange\", handleVisibilityChangeDebounced, {capture: false});\n        };\n    }, [handleVisibilityChange]);\n\n    return useMemo((): boolean => {\n        return isVisible;\n    }, [isVisible]);\n}\n"],"names":["ScreenWidthNameEnum","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","debounce","wrappedFunction","waitInMs","timeout","args","clearTimeout","setTimeout","screenMinWidth","desktop","mobile","tablet","defaultScreenSize","height","width","getScreenName","screenWidth","getScreenSize","document","documentElement","clientWidth","clientHeight","getDevicePixelRatio","window","devicePixelRatio","getScreenState","isLandscape","screenName","isDesktop","isMobile","isPortrait","isTablet","name","useSystem","isBrowser","defaultWidth","defaultHeight","defaultDevicePixelRatio","defaultIsDesktop","defaultIsLandscape","defaultIsMobile","defaultIsPortrait","defaultIsTablet","defaultName","setDevicePixelRatio","useState","setIsDesktop","setIsLandscape","setIsMobile","setIsPortrait","setIsTablet","setName","handleResize","useCallback","updatedWidth","updatedHeight","updatedDevicePixelRatio","updatedIsDesktop","updatedIsLandscape","updatedIsMobile","updatedIsPortrait","updatedIsTablet","updatedName","useEffect","handleResizeDebounced","addEventListener","capture","passive","removeEventListener","screenInfo","useMemo","useScreenSize","setWidth","setHeight","useScreenWidth","useScreenHeight","getDocumentIsVisible","visibilityState","useDocumentVisibility","isVisible","setIsVisible","handleVisibilityChange","handleVisibilityChangeDebounced"],"sourceRoot":""}